---
description: 
globs: 
alwaysApply: true
---
---
alwaysApply: true
---
Cтиль написания "snake_case".

Использовать Redux-like подход.

Все неизменяемы значения/параметры должны помещаться в @conf.lua в блок конфига к которому относиться параметр.

Изменяемые значения должны быть в состоянии - только чистый обьект без логики и методов, должно описываться в файле @state.lua.

Есть основной файл main.lua это слой подключения к love2d. В нем мы должны обрабатывать основные ивенты от love2d, вызывая необходимые свои функции. Все что нужно вызывать на этапе инициализации, нужно вызвать в love.load, все что каждый кадр, нужно вызывать в love.update, а то что касается отрисовки в love.draw.

Так же отдельное внимание нужно уделять вводу, его мы слушаем от love2d по ивентам запоминаем в буффер, и записываем в стейт в input_update() в начале каждого кадра.

Функции описываем по правилам того где они вызываются, если в load, то с префиксом _init, если в update, то с префиксом _update, если в draw, то с префиксом _draw.

Логику делим по файлам (модулям) - по сути просто групируем функции вместе по той логике к которой они относятся.

Все функции должны принимать game себе как параметр (не запрещается передавать доп параметры если нужно).
Получается что методы либо меняет состояние либо делает что то по информации из него (например отрисоваывает).

Если функция локальная конкретного модуля, то в нее не обязательно передвать game целиком, достаточно передать только необходимые параметры.

Системные функции нужно помещать в файл @system.lua. Но системными считаются те, которые используются во всем коде и имееют осистемный (не относящийся к логике игры) характер, типо как функция generate_uid.

Вспомогательные функции нужно помещать в файл @utils.lua. Но вспомогательными функциями считаются те, которые принимают в аргументы только базовые типы и делают какое-то общее переиспользуемое действие.